---
# This workflow requires a GALAXY_API_KEY secret present in the GitHub
# repository or organization.
#
# See: https://github.com/marketplace/actions/publish-ansible-role-to-galaxy
# See: https://github.com/ansible/galaxy/issues/46

name: Release
"on":
  push:
    tags:
      - "*"
env:
  APP_NAME: helloasso_dump

defaults:
  run:
    working-directory: ${{ env.APP_NAME }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4
        with:
          path:  ${{ env.APP_NAME }}

      - name: Compress asset
        run: tar -zcvf ${{ env.APP_NAME }}.tar.gz ${{ env.APP_NAME }}.py 

      - name: Store sha256 checksum
        run: sha256sum ${{ env.APP_NAME }}.tar.gz | awk '{print $1}' >> "$APP_CHECKSUM"

      - name: Upload app tarball to release
        uses: svenstaro/upload-release-action@latest
        id: attach_to_release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.APP_NAME }}.tar.gz
          asset_name: ${{ env.APP_NAME }}.tar.gz
          tag: ${{ github.ref }}
          overwrite: true

      - name: Install Ansible.
        run: pip3 install ansible-core

      - name: Import Ansible role.
        run: ansible-galaxy role install ${{ vars.DEPLOYEMENT_ROLE }}

      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          # Required, playbook filepath
          playbook: deploy.yml
          # Optional, directory where playbooks live
          directory: ./
          # Optional, SSH private key
          key: ${{secrets.SSH_PRIVATE_KEY}}
          # Optional, literal inventory file contents
          inventory: ${{secrets.INVENTORY}}
          # Optional, SSH known hosts file content
          known_hosts: ${{secrets.KNOWN_HOST}}
          # Optional, additional flags to pass to ansible-playbook
          options: >-
            --extra-vars deploy_archive_src={ url:${{ steps.attach_to_release.outputs.browser_download_url }},
            archive_name: ${{ env.APP_NAME }}.tar.gz }
