---
# This workflow requires a GALAXY_API_KEY secret present in the GitHub
# repository or organization.
#
# See: https://github.com/marketplace/actions/publish-ansible-role-to-galaxy
# See: https://github.com/ansible/galaxy/issues/46

name: Release
"on":
  push:
    tags:
      - "*"
env:
  APP_NAME: helloasso_dump

defaults:
  run:
    working-directory: helloasso_dump

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    environment: release    
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4
        with:
          path:  ${{ env.APP_NAME }}

      - name: Compress asset
        run: tar -zcvf ${{ env.APP_NAME }}.tar.gz ${{ env.APP_NAME }}.py 

      - name: Store sha256 checksum
        run: echo "SHA256=$(sha256sum ${{ env.APP_NAME }}.tar.gz | awk '{print $1}')" >> $GITHUB_OUTPUT
        id: sha256

      - name: Upload app tarball to release
        uses: svenstaro/upload-release-action@latest
        id: attach_to_release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.APP_NAME }}/${{ env.APP_NAME }}.tar.gz
          asset_name: ${{ env.APP_NAME }}.tar.gz
          tag: ${{ github.ref }}
          overwrite: true

      - name: Install Ansible and import deploy_archive role
        run: pip3 install ansible-core; ansible-galaxy role install chadek.deploy_archive

      - name: Generate ansibl-playbook
        run: |
          cat >deploy.yml << EOF
          ---
          - hosts: all

            roles:
            - chadek.deploy_archive
          EOF


      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          # Required, playbook filepath
          playbook: deploy.yml
          # Optional, directory where playbooks live
          directory: ./${{ env.APP_NAME }}
          # Optional, SSH private key
          key: ${{secrets.SSH_PRIVATE_KEY}}
          # Optional, literal inventory file contents
          inventory: ${{secrets.INVENTORY}}
          # Optional, SSH known hosts file content
          known_hosts: ${{secrets.KNOWN_HOST}}
          # Optional, additional flags to pass to ansible-playbook
          options: >-
            -e "{ deploy_archive_src: { url: ${{ steps.attach_to_release.outputs.browser_download_url }},
            archive_name: ${{ env.APP_NAME }}.tar.gz, checksum: ${{ steps.sha256.outputs.SHA256 }}, permission: '0644' } }"
